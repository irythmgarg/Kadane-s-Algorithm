#include <iostream>
#include <vector>
#include <climits> // For INT_MIN
using namespace std;

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        // Initialize maxsum with the smallest possible integer to handle negative numbers
        int maxsum = INT_MIN;  
        
        // Initialize sum to 0, which keeps track of the running sum of the current subarray
        int sum = 0;  
        
        // Iterate through the array
        for (int i = 0; i < nums.size(); i++) {
            // Add the current element to the running sum
            sum += nums[i];  
            
            // Update maxsum with the maximum of the current maxsum and the running sum
            maxsum = max(maxsum, sum);  
            
            // If the running sum becomes negative, reset it to 0, as starting a new subarray might be better
            if (sum < 0)  
                sum = 0;  
        }
        
        // Return the maximum sum of any subarray found
        return maxsum;  
    }
};
