Theory
Problem Statement:
Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

Approach:

Kadane's Algorithm is an optimal solution for finding the maximum sum of a contiguous subarray in linear time.
The key idea is to maintain a running sum of the current subarray and keep track of the maximum sum encountered so far.
If the running sum becomes negative, it is reset to zero because starting a new subarray will potentially give a higher sum.
The algorithm works by iterating over the array while maintaining two variables:
sum: Tracks the sum of the current subarray.
maxsum: Tracks the maximum sum encountered so far.
Algorithm:

Initialization:
Start with maxsum initialized to INT_MIN to handle cases where all elements are negative.
Set sum = 0 to track the running sum of the current subarray.
Iterate through the array:
For each element:
Add the element to the running sum (sum).
Update maxsum to the maximum of the current maxsum and sum.
If sum becomes negative, reset it to zero (indicating we will start a new subarray from the next element).
Return maxsum as the result, which will hold the maximum sum of any contiguous subarray.
Complexity:

Time Complexity: 
𝑂(𝑛)
O(n), where 
𝑛
n is the size of the array. We only need a single pass through the array.
Space Complexity: 
𝑂(1)
O(1), since we are using only a constant amount of space.

Algorithm Explanation
Initialization:

We start with maxsum = INT_MIN to ensure that even in the case of negative numbers, we can find the largest sum.
We initialize sum = 0 to track the sum of the current subarray as we iterate through the array.
Iterating Through the Array:

For each element nums[i]:
We add the element to the running sum (sum += nums[i]).
We then update maxsum to be the maximum of the current maxsum and the new sum (maxsum = max(maxsum, sum)).
If sum becomes negative, it means starting a new subarray from the next element will give us a better result, so we reset sum to zero.
Final Result:

After iterating through the entire array, maxsum contains the maximum sum of any contiguous subarray.
Edge Cases:

All elements are negative: Kadane’s Algorithm correctly handles this by ensuring the smallest sum is returned, which would be the least negative element.
Array with one element: The single element is trivially the maximum subarray.

